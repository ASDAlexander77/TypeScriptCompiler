lexer grammar TypeScriptLexerANTLR;

tokens 
{
    ABSTRACT_KEYWORD, 
    ANY_KEYWORD, 
    AS_KEYWORD, 
    ASSERTS_KEYWORD, 
    BIGINT_KEYWORD, 
    BOOLEAN_KEYWORD, 
    BREAK_KEYWORD, 
    CASE_KEYWORD, 
    CATCH_KEYWORD, 
    CLASS_KEYWORD, 
    CONTINUE_KEYWORD, 
    CONST_KEYWORD, 
    DEBUGGER_KEYWORD, 
    DECLARE_KEYWORD, 
    DEFAULT_KEYWORD, 
    DELETE_KEYWORD, 
    DO_KEYWORD, 
    ELSE_KEYWORD, 
    ENUM_KEYWORD, 
    EXPORT_KEYWORD, 
    EXTENDS_KEYWORD, 
    FALSE_KEYWORD, 
    FINALLY_KEYWORD, 
    FOR_KEYWORD, 
    FROM_KEYWORD, 
    FUNCTION_KEYWORD, 
    GET_KEYWORD, 
    IF_KEYWORD, 
    IMPLEMENTS_KEYWORD, 
    IMPORT_KEYWORD, 
    IN_KEYWORD, 
    INFER_KEYWORD, 
    INSTANCEOF_KEYWORD, 
    INTERFACE_KEYWORD, 
    INTRINSIC_KEYWORD, 
    IS_KEYWORD, 
    KEYOF_KEYWORD, 
    LET_KEYWORD, 
    MODULE_KEYWORD, 
    NAMESPACE_KEYWORD, 
    NEVER_KEYWORD, 
    NEW_KEYWORD, 
    NULL_KEYWORD, 
    NUMBER_KEYWORD, 
    OBJECT_KEYWORD, 
    PACKAGE_KEYWORD, 
    PRIVATE_KEYWORD, 
    PROTECTED_KEYWORD, 
    PUBLIC_KEYWORD, 
    READONLY_KEYWORD, 
    REQUIRE_KEYWORD, 
    GLOBAL_KEYWORD, 
    RETURN_KEYWORD, 
    SET_KEYWORD, 
    STATIC_KEYWORD, 
    STRING_KEYWORD, 
    SUPER_KEYWORD, 
    SWITCH_KEYWORD, 
    SYMBOL_KEYWORD, 
    THIS_KEYWORD, 
    THROW_KEYWORD, 
    TRUE_KEYWORD, 
    TRY_KEYWORD, 
    TYPE_KEYWORD, 
    TYPEOF_KEYWORD, 
    UNDEFINED_KEYWORD, 
    UNIQUE_KEYWORD, 
    UNKNOWN_KEYWORD, 
    VAR_KEYWORD, 
    VOID_KEYWORD, 
    WHILE_KEYWORD, 
    WITH_KEYWORD, 
    YIELD_KEYWORD, 
    ASYNC_KEYWORD, 
    AWAIT_KEYWORD, 
    OF_KEYWORD,

    OPENBRACE_TOKEN,
    CLOSEBRACE_TOKEN,
    OPENPAREN_TOKEN,
    CLOSEPAREN_TOKEN,
    OPENBRACKET_TOKEN,
    CLOSEBRACKET_TOKEN,
    DOT_TOKEN,
    DOTDOTDOT_TOKEN,
    SEMICOLON_TOKEN,
    COMMA_TOKEN,
    LESSTHAN_TOKEN,
    GREATERTHAN_TOKEN,
    LESSTHANEQUALS_TOKEN,
    GREATERTHANEQUALS_TOKEN,
    EQUALSEQUALS_TOKEN,
    EXCLAMATIONEQUALS_TOKEN,
    EQUALSEQUALSEQUALS_TOKEN,
    EXCLAMATIONEQUALSEQUALS_TOKEN,
    EQUALSGREATERTHAN_TOKEN,
    PLUS_TOKEN,
    MINUS_TOKEN,
    ASTERISKASTERISK_TOKEN,
    ASTERISK_TOKEN,
    SLASH_TOKEN,
    PERCENT_TOKEN,
    PLUSPLUS_TOKEN,
    MINUSMINUS_TOKEN,
    LESSTHANLESSTHAN_TOKEN,
    LESSTHANSLASH_TOKEN,
    GREATERTHANGREATERTHAN_TOKEN,
    GREATERTHANGREATERTHANGREATERTHAN_TOKEN,
    AMPERSAND_TOKEN,
    BAR_TOKEN,
    CARET_TOKEN,
    EXCLAMATION_TOKEN,
    TILDE_TOKEN,
    AMPERSANDAMPERSAND_TOKEN,
    BARBAR_TOKEN,
    QUESTION_TOKEN,
    QUESTIONQUESTION_TOKEN,
    QUESTIONDOT_TOKEN,
    COLON_TOKEN,
    EQUALS_TOKEN,
    PLUSEQUALS_TOKEN,
    MINUSEQUALS_TOKEN,
    ASTERISKEQUALS_TOKEN,
    ASTERISKASTERISKEQUALS_TOKEN,
    SLASHEQUALS_TOKEN,
    PERCENTEQUALS_TOKEN,
    LESSTHANLESSTHANEQUALS_TOKEN,
    GREATERTHANGREATERTHANEQUALS_TOKEN,
    GREATERTHANGREATERTHANGREATERTHANEQUALS_TOKEN,
    AMPERSANDEQUALS_TOKEN,
    BAREQUALS_TOKEN,
    CARETEQUALS_TOKEN,
    BARBAREQUALS_TOKEN,
    AMPERSANDAMPERSANDEQUALS_TOKEN,
    QUESTIONQUESTIONEQUALS_TOKEN,
    AT_TOKEN,    
    BACKTICK_TOKEN
}

ABSTRACT_KEYWORD: 'abstract' ;
ANY_KEYWORD: 'any' ;
AS_KEYWORD: 'as' ;
ASSERTS_KEYWORD: 'asserts' ;
BIGINT_KEYWORD: 'bigint' ;
BOOLEAN_KEYWORD: 'boolean' ;
BREAK_KEYWORD: 'break' ;
CASE_KEYWORD: 'case' ;
CATCH_KEYWORD: 'catch' ;
CLASS_KEYWORD: 'class' ;
CONTINUE_KEYWORD: 'continue' ;
CONST_KEYWORD: 'const' ;
DEBUGGER_KEYWORD: 'debugger' ;
DECLARE_KEYWORD: 'declare' ;
DEFAULT_KEYWORD: 'default' ;
DELETE_KEYWORD: 'delete' ;
DO_KEYWORD: 'do' ;
ELSE_KEYWORD: 'else' ;
ENUM_KEYWORD: 'enum' ;
EXPORT_KEYWORD: 'export' ;
EXTENDS_KEYWORD: 'extends' ;
FALSE_KEYWORD: 'false' ;
FINALLY_KEYWORD: 'finally' ;
FOR_KEYWORD: 'for' ;
FROM_KEYWORD: 'from' ;
FUNCTION_KEYWORD: 'function' ;
GET_KEYWORD: 'get' ;
IF_KEYWORD: 'if' ;
IMPLEMENTS_KEYWORD: 'implements' ;
IMPORT_KEYWORD: 'import' ;
IN_KEYWORD: 'in' ;
INFER_KEYWORD: 'infer' ;
INSTANCEOF_KEYWORD: 'instanceof' ;
INTERFACE_KEYWORD: 'interface' ;
INTRINSIC_KEYWORD: 'intrinsic' ;
IS_KEYWORD: 'is' ;
KEYOF_KEYWORD: 'keyof' ;
LET_KEYWORD: 'let' ;
MODULE_KEYWORD: 'module' ;
NAMESPACE_KEYWORD: 'namespace' ;
NEVER_KEYWORD: 'never' ;
NEW_KEYWORD: 'new' ;
NULL_KEYWORD: 'null' ;
NUMBER_KEYWORD: 'number' ;
OBJECT_KEYWORD: 'object' ;
PACKAGE_KEYWORD: 'package' ;
PRIVATE_KEYWORD: 'private' ;
PROTECTED_KEYWORD: 'protected' ;
PUBLIC_KEYWORD: 'public' ;
READONLY_KEYWORD: 'readonly' ;
REQUIRE_KEYWORD: 'require' ;
GLOBAL_KEYWORD: 'global' ;
RETURN_KEYWORD: 'return' ;
SET_KEYWORD: 'set' ;
STATIC_KEYWORD: 'static' ;
STRING_KEYWORD: 'string' ;
SUPER_KEYWORD: 'super' ;
SWITCH_KEYWORD: 'switch' ;
SYMBOL_KEYWORD: 'symbol' ;
THIS_KEYWORD: 'this' ;
THROW_KEYWORD: 'throw' ;
TRUE_KEYWORD: 'true' ;
TRY_KEYWORD: 'try' ;
TYPE_KEYWORD: 'type' ;
TYPEOF_KEYWORD: 'typeof' ;
UNDEFINED_KEYWORD: 'undefined' ;
UNIQUE_KEYWORD: 'unique' ;
UNKNOWN_KEYWORD: 'unknown' ;
VAR_KEYWORD: 'var' ;
VOID_KEYWORD: 'void' ;
WHILE_KEYWORD: 'while' ;
WITH_KEYWORD: 'with' ;
YIELD_KEYWORD: 'yield' ;
ASYNC_KEYWORD: 'async' ;
AWAIT_KEYWORD: 'await' ;
OF_KEYWORD: 'of' ;

OPENBRACE_TOKEN: '{' ;
CLOSEBRACE_TOKEN: '}' ;
OPENPAREN_TOKEN: '(' ;
CLOSEPAREN_TOKEN: ')' ;
OPENBRACKET_TOKEN: '[' ;
CLOSEBRACKET_TOKEN: ']' ;
DOT_TOKEN: '.' ;
DOTDOTDOT_TOKEN: '...' ;
SEMICOLON_TOKEN: ';' ;
COMMA_TOKEN: ',' ;
LESSTHAN_TOKEN: '<' ;
GREATERTHAN_TOKEN: '>' ;
LESSTHANEQUALS_TOKEN: '<=' ;
GREATERTHANEQUALS_TOKEN: '>=' ;
EQUALSEQUALS_TOKEN: '==' ;
EXCLAMATIONEQUALS_TOKEN: '!=' ;
EQUALSEQUALSEQUALS_TOKEN: '===' ;
EXCLAMATIONEQUALSEQUALS_TOKEN: '!==' ;
EQUALSGREATERTHAN_TOKEN: '=>' ;
PLUS_TOKEN: '+' ;
MINUS_TOKEN: '-' ;
ASTERISKASTERISK_TOKEN: '**' ;
ASTERISK_TOKEN: '*' ;
SLASH_TOKEN: '/' ;
PERCENT_TOKEN: '%' ;
PLUSPLUS_TOKEN: '++' ;
MINUSMINUS_TOKEN: '--' ;
LESSTHANLESSTHAN_TOKEN: '<<' ;
LESSTHANSLASH_TOKEN: '</' ;
GREATERTHANGREATERTHAN_TOKEN: '>>' ;
GREATERTHANGREATERTHANGREATERTHAN_TOKEN: '>>>' ;
AMPERSAND_TOKEN: '&' ;
BAR_TOKEN: '|' ;
CARET_TOKEN: '^' ;
EXCLAMATION_TOKEN: '!' ;
TILDE_TOKEN: '~' ;
AMPERSANDAMPERSAND_TOKEN: '&&' ;
BARBAR_TOKEN: '||' ;
QUESTION_TOKEN: '?' ;
QUESTIONQUESTION_TOKEN: '??' ;
QUESTIONDOT_TOKEN: '?.' ;
COLON_TOKEN: '_TOKEN:' ;
EQUALS_TOKEN: '=' ;
PLUSEQUALS_TOKEN: '+=' ;
MINUSEQUALS_TOKEN: '-=' ;
ASTERISKEQUALS_TOKEN: '*=' ;
ASTERISKASTERISKEQUALS_TOKEN: '**=' ;
SLASHEQUALS_TOKEN: '/=' ;
PERCENTEQUALS_TOKEN: '%=' ;
LESSTHANLESSTHANEQUALS_TOKEN: '<<=' ;
GREATERTHANGREATERTHANEQUALS_TOKEN: '>>=' ;
GREATERTHANGREATERTHANGREATERTHANEQUALS_TOKEN: '>>>=' ;
AMPERSANDEQUALS_TOKEN: '&=' ;
BAREQUALS_TOKEN: '|=' ;
CARETEQUALS_TOKEN: '^=' ;
BARBAREQUALS_TOKEN: '||=' ;
AMPERSANDAMPERSANDEQUALS_TOKEN: '&&=' ;
QUESTIONQUESTIONEQUALS_TOKEN: '??=' ;
AT_TOKEN: '@' ;
BACKTICK_TOKEN: '`' ;
