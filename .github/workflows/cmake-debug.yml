name: CMake

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - name: check disk space
      run: Get-PSDrive
      shell: pwsh

    - uses: actions/checkout@v2

    - name: Cache Build 3rd Party
      id: cache-3rd-party
      uses: actions/cache@v2
      with:
        path: __build/llvm
        key: ${{ runner.os }}-build-llvm

    - name: Cache 3rd Party binaries
      id: cache-3rd-party-binary
      uses: actions/cache@v2
      with:
        path: 3rdParty
        key: ${{ runner.os }}-3rd-party

    - name: Create __Build Folder
      shell: cmd
      run: IF NOT EXIST "c:\__build" (mkdir c:\__build)

    - name: Link __Build Folder
      shell: cmd
      run: IF EXIST "c:\__build" mklink /d .\__build c:\__build
    
    - name: Prepare 3rd party
      shell: cmd
      run: prepare_3rdParty.bat

    - name: Configure CMake
      shell: cmd
      working-directory: ${{github.workspace}}/tsc
      run: config_tsc_debug.bat

    - name: Build
      shell: cmd
      working-directory: ${{github.workspace}}/tsc
      run: build_tsc_debug.bat

    - name: Test
      shell: cmd
      working-directory: ${{github.workspace}}/__build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C Debug
      
