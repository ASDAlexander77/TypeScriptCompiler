name: CMake - Test - Live

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
#    - name: check disk space
#      run: Get-PSDrive
#      shell: pwsh

    - uses: actions/checkout@v2

    - name: Cache Build 3rd Party
      id: cache-3rd-party
      uses: actions/cache@v2
      with:
        path: __build/llvm
        key: ${{ runner.os }}-build-llvm

    - name: Cache 3rd Party binaries
      id: cache-3rd-party-binary
      uses: actions/cache@v2
      with:
        path: 3rdParty
        key: ${{ runner.os }}-3rd-party

    - name: Create __Build Folder
      shell: cmd
      run: IF NOT EXIST ".\__build" (mkdir .\__build)

    - name: Create __Build/llvm Folder
      shell: cmd
      run: IF NOT EXIST ".\__build\llvm" (mkdir .\__build\llvm)
    
    - name: Create __Build/llvm/release Folder
      shell: cmd
      run: IF NOT EXIST ".\__build\llvm\release" (mkdir .\__build\llvm\release)

    - name: Create __Build/tsc-release Folder
      shell: cmd
      run: IF NOT EXIST ".\__build\tsc-release" (mkdir .\__build\tsc-release)
    
    - name: Download 3rd party
      continue-on-error: true
      shell: pwsh
      run: Invoke-WebRequest -Uri "https://www.dropbox.com/s/o8hrv8ppqayu6vg/llvm_13_release.zip?dl=1" -OutFile "llvm_13_release.zip"

    - name: UnZip 3rd party
      continue-on-error: true
      run: Expand-Archive -Path "llvm_13_release.zip" -DestinationPath "3rdParty\llvm\"
      shell: pwsh

    - name: Configure
      continue-on-error: true
      shell: cmd
      working-directory: ${{github.workspace}}/tsc
      run: config_tsc_release.bat

    - name: Build
      continue-on-error: true
      shell: cmd
      working-directory: ${{github.workspace}}/tsc
      run: build_tsc_release.bat

    - name: Test
      shell: cmd
      working-directory: ${{github.workspace}}/__build/tsc-release
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -j18 -C Release -T test --output-on-failure -T test --output-on-failure
      
